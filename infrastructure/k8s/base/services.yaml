apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: lapa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: lapa/user-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: lapa
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: lapa
spec:
  selector:
    app: user-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pet-service
  namespace: lapa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pet-service
  template:
    metadata:
      labels:
        app: pet-service
    spec:
      containers:
        - name: pet-service
          image: lapa/pet-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: lapa
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: pet-service
  namespace: lapa
spec:
  selector:
    app: pet-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: lapa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: lapa/order-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: lapa
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: lapa
spec:
  selector:
    app: order-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: location-service
  namespace: lapa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: location-service
  template:
    metadata:
      labels:
        app: location-service
    spec:
      containers:
        - name: location-service
          image: lapa/location-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: lapa
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: location-service
  namespace: lapa
spec:
  selector:
    app: location-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: lapa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
        - name: payment-service
          image: lapa/payment-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: lapa
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: lapa
spec:
  selector:
    app: payment-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: lapa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      containers:
        - name: chat-service
          image: lapa/chat-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: lapa
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
  namespace: lapa
spec:
  selector:
    app: chat-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-service
  namespace: lapa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: media-service
  template:
    metadata:
      labels:
        app: media-service
    spec:
      containers:
        - name: media-service
          image: lapa/media-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: lapa
            - name: MONGO_HOST
              value: mongo
            - name: MONGO_PORT
              value: "27017"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: media-service
  namespace: lapa
spec:
  selector:
    app: media-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: lapa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
        - name: notification-service
          image: lapa/notification-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: lapa
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: lapa
spec:
  selector:
    app: notification-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service
  namespace: lapa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics-service
  template:
    metadata:
      labels:
        app: analytics-service
    spec:
      containers:
        - name: analytics-service
          image: lapa/analytics-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lapa-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: lapa
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
            - name: MONGO_HOST
              value: mongo
            - name: MONGO_PORT
              value: "27017"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: analytics-service
  namespace: lapa
spec:
  selector:
    app: analytics-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http


